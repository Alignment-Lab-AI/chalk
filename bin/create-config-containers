#!/bin/bash

function usage {
    COLS=`tput cols`
    COLS=${COLS:-80}

    if command -v fold >/dev/null ; then
        wrap="fold -s -w ${COLS}"
    else
        wrap='echo'
    fi
        
    echo "Usage: $0 [flags]"
    echo
    echo "This command takes no arguments."
    echo
    echo "Available flags:"
    grep -h "##" $0 | sed "s/) ##/:/" | sed -e 's/[a-zA-Z]/-&/' | \
        sed -e 's/^ */  /' | grep -v grep | fold 
    exit 0
}

while getopts "nra:t:h" flag;
do
    case ${flag} in
        n) ## Force docker to run with --no-cache
            NO_CACHE="--no-cache "
            ;;
        r) ## Generate the 'release' build container.
            GEN_RELEASE=1
            ;;
        R) ## *Only* generate the release container, not the dev container.
            GEN_DEV=0
            GEN_RELEASE=1
            ;;
        a) ## Explicitly set CHALK_ARCH (overriding env var.)
            ARCH_FLAG="${OPTARG}"
            ;;
        t) ## Explicitly set CHALK_TAG (overriding env var.)
            TAG_FLAG=$"{OPTARG}"
            ;;
        h) ## This help message.
            usage
            ;;
        *)
            usage
            ;;
    esac
done

if [ ${OPTIND} -le $# ]; then
    usage
fi

BIN_DIR=$(cd "$( dirname "${BASH_SOURCE}" )" && pwd)
CHALK_BASE=$(dirname "${BIN_DIR}")
CHALK_TAG="${CHALK_TAG:-dev}"
CHALK_ARCH=${CHALK_ARCH:-linux/amd64}  # Or linux/arm64
CHALK_ARCH=${ARCH_FLAG:-${CHALK_ARCH}}
CHALK_TAG="${TAG_FLAG:-${CHALK_TAG}}"
GEN_DEV=${GEN_DEV:-1}
GEN_RELEASE=${GEN_RELEASE:-0}

cd ${CHALK_BASE}

if [ ${GEN_DEV} -eq 1 ]; then
    docker build --platform ${CHALK_ARCH} -tchalkconf-local:${CHALK_TAG} ${NO_CACHE} -f docker/Dockerfile.localrun .
fi

if [ ${GEN_RELEASE} -eq 1 ]; then
    docker build --platform ${CHALK_ARCH} -tchalkconf-package:${CHALK_TAG} ${NO_CACHE} -f docker/Dockerfile.ccfg-pkg .
    docker run -v $(pwd):/mnt/:Z --rm -t chalkconf-package:${CHALK_TAG}
    docker rmi -f chalkconf-package:${CHALK_TAG}
    docker build --platform ${CHALK_ARCH} -tchalkconf:${CHALK_TAG} ${NO_CACHE} -f docker/Dockerfile.chalkconf .
    yes | rm chalkconf
fi
