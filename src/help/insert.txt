%{H Usage: {appName} insert [COMMAND_OPTION]... [search path] }%
Inserts metadata into artifacts specified in the search path.

%{T:<26:
Variable::Override::Type::Description
recursive::-r, -R, --recursive, --no-recursive::bool::Determines whether a file scan will recursively walk paths.
container-image-id::-I, --container-image-id::string::A SHA-256 hash identifier for a container to mark (in hex format). Currently, the chalk to insert will ALWAYS be written to stdout, but should be baked into the top layer of the image where possible. Note that you should avoid having other sinks write to stdout if this flag might get used.  Generally, this stops all other codec processing, and will cause the 'insertion' piece to write to STDOUT so that it can be placed in a new wrapping container. Chalk currently does not do this wrapping itself.
container-image-name::-N, --container-image-name::string::The name of the container, which will be used as the ARTIFACT_PATH.   Only consulted when the container image ID is provided.
}%

There are two styles of marking, one where all metadata is directly attached to the artifact, and one where the artifact is marked primarily with a 'pointer', and then the rest of the metadata is stored elsewhere.  Generally, we recommend writing a 'pointer' by default.

It is easy to choose which keys in the full set of possible metadata get put either into a pointer, and it's easy to select which metadata isn't collected at all.  Similarly, it's easy to write full metadata to multiple different places, and include different keys in each place.  See {bold}{appName} help output{reset} for details.
