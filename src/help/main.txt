%{H Usage: {appName} [GLOBAL_OPTION]... command [COMMAND_OPTION]... [args] }%
Insert or extract metadata from software artifacts.

It's particularly useful for helping to map production with development, providing full tracability. Usually, metadata is produced at CI/CD time after software is built, and then collected from production. This command can both insert and extract, and send data off as appropriate.

This tool is meant to be easy in CI/CD-- just drop it into the right place in the pipeline, and never think about it again.

At the same time, it's very customizable. Administrators can easily produce stand-alone binaries that collect custom metadata.

%{h Global flags}%
%{t
-f,::--config-file=FILE_NAME::Location from which to read an external config file
-c,::--color::Enable colors (overrides any config file)
-C,:: --no-color::Disable colors (overrides any config file)
-l,:: --log-level=LOG_LEVEL::Valid values: none, error, warn, info, verbose
-p,:: --publish-defaults::Show config info. See '{appName} help defaults'
-P,:: --no-publish-defaults::Do not publish config info.  See '{appName} help defaults' for details.
}%
Currently, chalk's behavior is easily customized, primarily via a flexible configuration file. The options provided at the command line are reserved for items where there's an obvious utilitiy in overriding without editing the config file.

%{h commands}%
%{i commands}%See {bold}{appName} help config{reset} for an overview of the configuration file.
See {bold}{appName} help topics{reset} for a list of all help topics.
