## STARTUP CONFIGURATION
if envExists("NO_COLOR") {
  color: false
} else {
  color: true
}

cmd  := argv0()
args := argv()
echo("command is: ", cmd)

sink_config("redirectable_out", "stdout", {}, [])
sink_config("default_out",      "stderr", {}, [])

if cmd == "extract" or cmd == "insert" or cmd == "delete" {

  subscribe("extract", "default_out") # Writes SAMIs extracted w/ 'extract' cmd
  subscribe("nesting", "default_out") # Writes extracted samis when inserting
  subscribe("insert",  "default_out") # Writes full SAMIs on insert (no ptrs)
  subscribe("delete",  "default_out") # Writes full SAMIs being deleted
  subscribe("dry-run", "default_out")

}
elif cmd == "confdump" {
  if len(args) > 0 {
    sink_config("dump_out", "file", {"filename" : args[0]}, [])
  }
  else {
    sink_config("dump_out", "stdout", {}, [])
  }

  subscribe("confdump", "dump_out")
}
else {
  if cmd == "confload" {
    subscribe("confload", "redirectable_out")
  } elif cmd == "version" {
    subscribe("version",  "redirectable_out")
  }
}

if cmd != "defaults" {
    subscribe("defaults", "default_out")
} else {
    subscribe("defaults", "redirectable_out")
}

subscribe("help", "default_out")


# This is actually installed by default by nimutils. You can't
# actually redefine it, but you can unsubscribe() it, and add
# a replacement instead via subscribe()
#
#
#
# # If a stacked config redefines stream.logs.hooks, then it will
# # wipe out the default installed hook above.
# stream logs {
#   filters: [ "defaultLogs" ]
# }
