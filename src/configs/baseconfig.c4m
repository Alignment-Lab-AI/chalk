## STARTUP CONFIGURATION
if envExists("NO_COLOR") {
  color: false
} else {
  color: true
}

cmd  := argv0()
args := argv()

sink_config("user_err", "stderr", {}, [])
sink_config("user_out", "stdout", {}, [])

# For commands that output JSON, default user output should get
# JSON formatting and always get a newline per-publish.
sink_config("json_out", "stdout", {}, ["pretty_json", "fix_new_line"])

subscribe("extract", "json_out") # Writes SAMIs extracted w/ 'extract' cmd
subscribe("nesting", "json_out") # Writes extracted samis when inserting
subscribe("insert",  "json_out") # Writes full SAMIs on insert (no ptrs)
subscribe("delete",  "json_out") # Writes full SAMIs being deleted
subscribe("dry-run", "user_out")

if cmd == "confdump" {
  if len(args) > 0 {
    sink_config("dump_out", "file", {"filename" : args[0]}, [])
    subscribe("confdump", "dump_out")
  }
  else {
    subscribe("confdump", "user_out")
  }
} elif cmd == "version" {
  # Send to stdout so people can more easily grep from scripts.
  subscribe("version",  "user_out")
} elif cmd == "confload" {
  # Do nothing; the "confload" topic publishes the new config file.
  # But, if you had an s3 sink set up and wanted to record it, could do:
  # subscribe("confload", "s3")
}

if cmd != "defaults" {
    subscribe("defaults", "user_out")
} else {
    subscribe("defaults", "user_err")
}

subscribe("help", "user_out")

# Note that there is already an output configuration called "log_hook"
# to which you can subscribe to different sinks in order to get the
# log messages going different places.
