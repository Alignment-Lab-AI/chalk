## This is where we provide sane defaults for I/O.  Chalk is very
## flexible in this regard, and almost nothing is hardcoded.
##
## :Author: John Viega (john@crashoverride.com)
## :Copyright: 2022, 2023, Crash Override, Inc.

if not using_tty() {
  color: false
}
elif env_exists("NO_COLOR") {
  color: false
} else {
  color: true
}

cmd  := argv0()

subscribe("report",   "json_console_err")
subscribe("audit",    "json_console_out")
subscribe("version",  "console_out")
#% INTERNAL
if cmd == "helpdump" {
    subscribe("help", "json_console_out")
} else {
#% END
subscribe("help",     "console_out")
#% INTERNAL
}
#% END

if cmd == "dump" {
  args := argv()
  if len(args) == 0 {
    subscribe("confdump", "console_out")
  } else {
    sink_config.dump_out.enabled  = true
    sink_config.dump_out.filename = args[0]
    subscribe("confdump", "dump_out")
  }
}
elif cmd == "defaults" {
    subscribe("defaults", "console_out")
} else {
    subscribe("defaults", "console_err")
}
# Note that there are already two pre-built output configurations.
# They are both subscribed to the 'stderr' sink.  You can remove those
# subscriptions.
#
# - "log_hook",   to which chalk log messages post. There are filters
#                 installed to add optional color, and to filter based
#                 on your log-level setting.
#
# - "con4m_hook", to which errors in the configuration file post. The
#                 same filters are installed; it respects the same
#                 'log-level' setting, but all messages posted to it
#                 will be 'error' messages.
#
# You can, if you like, configure subscriptions to the underlying
# topics, in order to hook up other sinks.  The logging topic is
# called, appropriately enough, "logs".  The topic for configuration
# file errors is "con4m".
