networks:
  chalk:
  imds:
    ipam:
      driver: default
      config:
        - subnet: 169.254.169.254/24

services:
  # --------------------------------------------------------------------------
  # CHALK

  chalk:
    build:
      context: .
      target: deps
      args:
        # set if need to test con4m static libs
        CON4M_BRANCH: ${CON4M_BRANCH:-}
    command: nimble ${CHALK_BUILD:-release}
    working_dir: /chalk
    volumes:
      - .:/chalk/
      - ../nimutils:/nimutils
      - ../con4m:/con4m
    # environment:
    # CON4M_DEV is conditionally set in Makefile

  chalk-release:
    build:
      context: .
      args:
        CHALK_BUILD: ${CHALK_BUILD:-release}
        # set if need to test con4m static libs
        CON4M_BRANCH: ${CON4M_BRANCH:-}
      target: ${BASE:-ubuntu}
    working_dir: $PWD
    volumes:
      - $PWD:$PWD

  # --------------------------------------------------------------------------
  # CHALK CONFIG

  config:
    build:
      context: ./config-tool
      target: deps
    command: python -m chalk_config
    working_dir: /chalk/config-tool
    volumes:
      - .:/chalk
      - ./.config-tool-bin:/config-bin
      - ./config-tool-outdir:/outdir
      - $HOME/.config:/root/.config
    environment:
      TERM: ${TERM:-}
      COLORTERM: ${COLORTERM:-}
      CHALK_BINARIES_ARE_LOCAL: 1

  config-release:
    build:
      context: ./config-tool
      additional_contexts:
        git: ./.git
      target: release
    working_dir: /chalk/config-tool
    volumes:
      - ./.config-tool-bin:/config-bin
      - ./config-tool-outdir:/outdir
      - $HOME/.config:/root/.config
    environment:
      TERM: ${TERM:-}
      COLORTERM: ${COLORTERM:-}
      CHALK_BINARIES_ARE_LOCAL: 1

  # --------------------------------------------------------------------------
  # SERVER

  server: &server
    build:
      context: ./server
      target: deps
    networks:
      chalk:
        aliases:
          - chalk.local
    ports:
      - 8585:8585
    working_dir: /chalk/server
    volumes:
      - .:/chalk
    healthcheck:
      test:
        - CMD-SHELL
        - sh -c "curl -f http://localhost:8585/health"
      start_period: 30s
      interval: 1s

  server-tls:
    <<: *server
    command: run -r -p 5858 --domain=tls.chalk.local --keyfile=cert.key --certfile=cert.pem --use-existing-cert
    ports:
      - 5858:5858
    networks:
      chalk:
        aliases:
          - tls.chalk.local
    healthcheck:
      test:
        - CMD-SHELL
        - sh -c "curl -f https://localhost:5858/health --insecure"
      start_period: 30s
      interval: 1s

  server-release:
    build:
      context: ./server
      additional_contexts:
        git: ./.git
      target: static
    networks:
      chalk:
        aliases:
          - release.chalk.local
    ports:
      - 8586:8585
    working_dir: /chalk/server
    volumes:
      - .:/chalk

  # --------------------------------------------------------------------------
  # TESTS

  # there is no official imds test container so we have very simple wrapper
  imds:
    build:
      context: ./tests
    entrypoint: uvicorn
    command: app:app --host=0.0.0.0 --port=80 --reload
    working_dir: /imds
    volumes:
      - ./tests/imds:/imds
    healthcheck:
      test:
        - CMD-SHELL
        - sh -c "curl -f http://localhost/health"
      start_period: 10s
      interval: 1s
    networks:
      imds:
        ipv4_address: 169.254.169.254

  # simple server for serving static files
  static:
    build:
      context: ./tests
    entrypoint: python
    command: -m http.server 8000
    working_dir: /chalk/tests
    volumes:
      - .:/chalk
    healthcheck:
      test:
        - CMD-SHELL
        - sh -c "curl -f http://localhost:8000/conftest.py"
      start_period: 10s
      interval: 1s
    networks:
      chalk:

  tests:
    image: chalk_local_tests
    container_name: chalk_local_tests
    build:
      context: ./tests
    volumes:
      - .:/chalk
      - /var/run/docker.sock:/var/run/docker.sock
      - ${HOME}/.aws:/root/.aws
    working_dir: /chalk/tests
    networks:
      - chalk
      - imds
    depends_on:
      registry:
        condition: service_healthy
      server:
        condition: service_healthy
      server-tls:
        condition: service_healthy
      imds:
        condition: service_healthy
      static:
        condition: service_healthy
    environment:
      AWS_PROFILE: ${AWS_PROFILE:-}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      GITHUB_ACTIONS: ${GITHUB_ACTIONS:-}

  # --------------------------------------------------------------------------
  # MISC DEPS

  registry:
    image: registry:2
    container_name: registry
    ports:
      - "5044:5044"
    environment:
      - REGISTRY_HTTP_ADDR=0.0.0.0:5044
    networks:
      - chalk
    healthcheck:
      test:
        - CMD-SHELL
        - sh -c "echo 'GET / HTTP/1.1' | nc -v localhost 5044"
      start_period: 30s
      interval: 1s

  sqlite:
    image: coleifer/sqlite-web
    volumes:
      - ./server:/server
    environment:
      SQLITE_DATABASE: /server/chalkdb.sqlite
    ports:
      - 18080:8080
    healthcheck:
      test:
        - CMD-SHELL
        - sh -c "echo 'GET / HTTP/1.1' | nc -v localhost 8080"
      start_period: 30s
      interval: 1s
