import shutil
from pathlib import Path

from .chalk.runner import Chalk
from .chalk.validate import (
    ArtifactInfo,
    validate_chalk_report,
    validate_extracted_chalk,
    validate_virtual_chalk,
)
from .conf import CODEOWNERS
from .utils.git import init
from .utils.log import get_logger


logger = get_logger()


def test_codeowners(tmp_data_dir: Path, chalk: Chalk):
    folder = CODEOWNERS / "raw1"
    expected_owners = (folder / "CODEOWNERS").read_text()
    shutil.copytree(folder, tmp_data_dir, dirs_exist_ok=True)
    artifact_info = ArtifactInfo.all_shebangs()
    assert len(artifact_info) == 1
    artifact = Path(list(artifact_info.keys())[0])
    init(tmp_data_dir)

    # chalk reports generated by insertion, json array that has one element
    insert = chalk.insert(artifact=artifact, virtual=True)
    assert insert.mark["CODE_OWNERS"] == expected_owners
    # check chalk report
    validate_chalk_report(
        chalk_report=insert.report, artifact_map=artifact_info, virtual=True
    )

    # array of json chalk objects as output, of which we are only expecting one
    extract = chalk.extract(artifact=tmp_data_dir)
    validate_extracted_chalk(
        extracted_chalk=extract.report, artifact_map=artifact_info, virtual=True
    )
    validate_virtual_chalk(
        tmp_data_dir=tmp_data_dir, artifact_map=artifact_info, virtual=True
    )
