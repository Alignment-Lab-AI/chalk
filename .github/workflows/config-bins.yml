name: Publish Config Binaries

on:
  workflow_dispatch:

jobs:
  build:
    name: Build chalk-config binaries
    runs-on: ${{ matrix.builder }}

    outputs:
      chalkversion: ${{ steps.chalkversion.outputs.version }}
      chalkconfigversion: ${{ steps.chalkversion.outputs.chalk_config_version }}

    strategy:
      matrix:
        include:
          # FIXME The buildjet/setup-python action does not support arm64
          # - builder: buildjet-2vcpu-ubuntu-2204-arm
          #   platform: arm64
          #   flavor: linux
          #   name: chalkconf
          # FIXME https://github.com/crashappsec/chalk-internal/issues/357
          # - builder: windows-latest
          #   platform: amd64
          #   flavor: windows
          # name: chalkconf.exe
          - builder: ubuntu-latest
            platform: amd64
            flavor: linux
            name: chalkconf
          # only amd64
          # - builder: macos-latest
          #   platform: amd64
          #   flavor: darwin
          #   name: chalkconf
          - builder: macos-latest
            platform: arm64
            flavor: darwin
            name: chalkconf

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Get chalk version
        id: chalkversion
        run: |
          echo "CHALK_VERSION=$(cat chalk_internal.nimble | grep version | grep "=" | cut -d'"' -f2)" >> "$GITHUB_ENV"
          echo "version=$(cat chalk_internal.nimble | grep version | grep "=" | cut -d'"' -f2)" >> "$GITHUB_OUTPUT"

      - name: Set up Python 3.11.3
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.3"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --quiet --no-cache-dir awscli setuptools wheel staticx
          pip install -r config-tool/requirements.txt
          pip install --quiet --no-cache-dir awscli

      - name: Create binary
        run: |
          cd config-tool
          pyinstaller --onefile chalk-config/chalkconf.py --collect-all textual --collect-all rich
          mv dist/chalkconf dist/dynamic
          staticx dist/dynamic dist/chalkconf

      - uses: actions/upload-artifact@v3
        with:
          name: chalk-config-${{ matrix.flavor}}-${{ matrix.platform }}
          path: config-tool/dist/${{ matrix.name }}

      - name: Upload to S3
        run: |
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} aws s3 cp config-tool/dist/${LOCAL_KEY} s3://${S3_BUCKET}/${S3_VERSIONED_KEY} --region ${AWS_REGION} --acl public-read
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID} AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY} aws s3 cp config-tool/dist/${LOCAL_KEY} s3://${S3_BUCKET}/${S3_LATEST_KEY} --region ${AWS_REGION} --acl public-read
        env:
          AWS_REGION: "us-east-1"
          S3_BUCKET: crashoverride-public-binaries
          S3_VERSIONED_KEY: ${{ matrix.name }}-${{ env.CHALK_VERSION }}-${{matrix.flavor}}-${{matrix.platform}}
          S3_LATEST_KEY: ${{ matrix.name }}-${{matrix.flavor}}-${{matrix.platform}}
          LOCAL_KEY: ${{ matrix.name }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
