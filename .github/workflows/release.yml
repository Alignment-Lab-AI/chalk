name: release
on:
  workflow_dispatch:
    inputs:
      BASE:
        type: choice
        description: "whether chalk should be compiled for alpine or ubuntu "
        options:
          - alpine
          - ubuntu
        message:
          required: true
        required: true
        default: "ubuntu"

permissions:
  packages: write
  contents: read

jobs:
  release:
    runs-on: ${{ matrix.builder }}

    outputs:
      chalkversion: ${{ steps.chalkversion.outputs.version }}

    strategy:
      matrix:
        include:
          - builder: ubuntu-latest
            platform: amd64
            flavor: linux
          - builder: buildjet-2vcpu-ubuntu-2204-arm
            platform: arm64
            flavor: linux

    steps:
      - name: Checkout Code
        uses: actions/checkout@v1

      - name: Get chalk version
        id: chalkversion
        run: |
          echo "CHALK_VERSION=$(cat chalk_internal.nimble | grep version | grep "=" | cut -d'"' -f2)" >> "$GITHUB_ENV"
          echo "version=$(cat chalk_internal.nimble | grep version | grep "=" | cut -d'"' -f2)" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Check versions
        if: env.CHALK_VERSION != ''
        run: |
          echo "Building with the following versions"
          echo ${{ env.CHALK_VERSION }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          file: docker/Dockerfile.chalk-${{ inputs.BASE }}
          context: .
          push: true
          provenance: false # https://github.com/docker/buildx/issues/1608
          platforms: linux/${{ matrix.platform }}
          tags: |
            ghcr.io/${{ github.repository_owner }}/chalk:${{ inputs.BASE }}-latest-${{ matrix.platform }}
            ghcr.io/${{ github.repository_owner }}/chalk:${{ inputs.BASE }}-${{ env.CHALK_VERSION }}-${{ matrix.platform }}

      - name: Push to S3
        run: |
          python -m pip install --upgrade pip
          pip install --quiet --no-cache-dir awscli
          mkdir -p /tmp/chalkbuild
          echo "FROM alpine" >> /tmp/chalkbuild/Dockerfile
          echo "COPY --from=ghcr.io/${{ github.repository_owner }}/chalk:${{ inputs.BASE }}-${{ env.CHALK_VERSION }}-${{ matrix.platform }} /chalk /chalk" >> /tmp/chalkbuild/Dockerfile
          cat /tmp/chalkbuild/Dockerfile
          cd /tmp/chalkbuild
          docker build -t releasechalk .
          docker run -v `pwd`:/chalkbuild releasechalk /bin/sh -c "cp /chalk /chalkbuild"
          aws s3 cp chalk s3://${S3_BUCKET}/${S3_VERSIONED_KEY} --acl public-read
          aws s3 cp chalk s3://${S3_BUCKET}/${S3_LATEST_KEY} --acl public-read
        env:
          AWS_REGION: "us-east-1"
          S3_BUCKET: crashoverride-public-binaries
          S3_VERSIONED_KEY: chalk-${{ env.CHALK_VERSION }}-${{matrix.flavor}}-${{matrix.platform}}
          S3_LATEST_KEY: chalk-${{matrix.flavor}}-${{matrix.platform}}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  manifest:
    runs-on: ubuntu-latest
    needs: release

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Create and push manifest images for latest
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: ghcr.io/${{ github.repository_owner }}/chalk:${{ inputs.BASE }}-latest
          images: ghcr.io/${{ github.repository_owner }}/chalk:${{ inputs.BASE }}-latest-amd64,ghcr.io/${{ github.repository_owner }}/chalk:${{ inputs.BASE }}-latest-arm64
          push: true

      - name: Create and push manifest images for specific version
        uses: Noelware/docker-manifest-action@0.3.1
        with:
          inputs: ghcr.io/${{ github.repository_owner }}/chalk:${{ inputs.BASE }}-${{ needs.release.outputs.chalkversion }}
          images: ghcr.io/${{ github.repository_owner }}/chalk:${{ inputs.BASE }}-${{ needs.release.outputs.chalkversion }}-amd64,ghcr.io/${{ github.repository_owner }}/chalk:${{ inputs.BASE }}-${{ needs.release.outputs.chalkversion }}-arm64
          push: true
