name: release:chalk

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:

permissions:
  contents: write # to push github release
  id-token: write # for aws role
  packages: write

jobs:
  binary:
    runs-on: ${{ matrix.builder }}

    strategy:
      matrix:
        include:
          - builder: ubuntu-latest
            platform: amd64
            os: linux
          - builder: buildjet-2vcpu-ubuntu-2204-arm
            platform: arm64
            os: linux

    steps:
      - name: Checkout Code
        uses: crashappsec/action-checkout@main
        with:
          fetch-depth: 0

      - name: Setup Release Deps
        uses: ./.github/actions/release
        with:
          secrets: ${{ toJSON(secrets) }}
          platform: ${{ matrix.platform }}

      - name: Bake Images
        run: |
          docker buildx bake chalk --load

      - name: Compile chalk
        run: |
          make release

      - name: Sanity check
        run: |
          ./chalk version

      - name: Update Current Version
        if: matrix.platform == 'amd64'
        run: |
          make version > current-version.txt
          aws s3 cp current-version.txt s3://${{ secrets.CHALK_BINARIES_BUCKET }}/chalk/current-version.txt --acl=public-read

      - name: Push amd64 Binaries
        if: matrix.platform == 'amd64'
        run: |
          aws s3 cp chalk s3://${{ secrets.CHALK_BINARIES_BUCKET }}/chalk/chalk-$(make version)-${{ matrix.os }}-amd64  --acl=public-read
          aws s3 cp chalk s3://${{ secrets.CHALK_BINARIES_BUCKET }}/chalk/chalk-$(make version)-${{ matrix.os }}-x86_64 --acl=public-read
          aws s3 cp chalk s3://${{ secrets.CHALK_BINARIES_BUCKET }}/chalk/chalk-$(make version)-$(uname -s)-$(uname -m) --acl=public-read

      - name: Push arm64 Binaries
        if: matrix.platform == 'arm64'
        run: |
          aws s3 cp chalk s3://${{ secrets.CHALK_BINARIES_BUCKET }}/chalk/chalk-$(make version)-${{ matrix.os }}-arm64   --acl=public-read
          aws s3 cp chalk s3://${{ secrets.CHALK_BINARIES_BUCKET }}/chalk/chalk-$(make version)-${{ matrix.os }}-aarch64 --acl=public-read
          aws s3 cp chalk s3://${{ secrets.CHALK_BINARIES_BUCKET }}/chalk/chalk-$(make version)-$(uname -s)-$(uname -m)  --acl=public-read

  github:
    needs: binary

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: crashappsec/action-checkout@main
        with:
          fetch-depth: 0

      - name: Setup Release Deps
        uses: ./.github/actions/release
        with:
          secrets: ${{ toJSON(secrets) }}
          platform: ${{ matrix.platform }}

      # necessary for manual jobs as there is no tag
      - name: Get Chalk Version
        id: version
        run: |
          echo "version=$(make version)" >> $GITHUB_OUTPUT

      - name: Aggregate All Released Binaries From S3
        run: |
          aws s3 cp --recursive --exclude="*" --include="chalk/chalk-$(make version)-*" s3://${{ secrets.CHALK_BINARIES_BUCKET }} dist

      - name: Upload Binaries to GitHub Release
        # official action is not maintained
        # https://github.com/actions/create-release
        # so using this suggested action instead
        uses: ncipollo/release-action@v1.13.0
        with:
          allowUpdates: true
          artifacts: "dist/chalk/*"
          tag: v${{ steps.version.outputs.version }}
