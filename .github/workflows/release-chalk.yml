name: release:chalk

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:

permissions:
  contents: write # to push github release
  id-token: write # for aws role
  packages: write

env:
  CHALK_BINARIES_BUCKET: ${{ secrets.CHALK_BINARIES_BUCKET }}

jobs:
  binary:
    runs-on: ${{ matrix.builder }}

    strategy:
      matrix:
        include:
          - builder: ubuntu-latest
            arch: amd64
            os: linux
          - builder: buildjet-2vcpu-ubuntu-2204-arm
            arch: arm64
            os: linux
          - builder: macos-latest
            arch: amd64
            os: darwin

    steps:
      - name: Checkout Code
        uses: crashappsec/action-checkout@main
        with:
          fetch-depth: 0

      - name: Setup Release Deps
        uses: ./.github/actions/release
        with:
          secrets: ${{ toJSON(secrets) }}
          arch: ${{ matrix.arch }}
          os: ${{ matrix.os }}

      - name: Bake Images
        if: matrix.os == 'linux'
        run: |
          docker buildx bake chalk --load

      - name: Compile chalk (Docker)
        if: matrix.os == 'linux'
        run: |
          make release

      - name: Compile chalk (Host)
        if: matrix.os == 'darwin'
        run: |
          DOCKER= make release

      - name: Sanity check
        run: |
          ./chalk version

      - name: Dist
        run: |
          make dist

      - name: Upload To S3
        run: |
          make upload

  github:
    needs: binary

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: crashappsec/action-checkout@main
        with:
          fetch-depth: 0

      - name: Setup Release Deps
        uses: ./.github/actions/release
        with:
          secrets: ${{ toJSON(secrets) }}

      # necessary for manual jobs as there is no tag
      - name: Get Chalk Version
        id: version
        run: |
          echo "version=$(make version)" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        # official action is not maintained
        # https://github.com/actions/create-release
        # so using this suggested action instead
        uses: ncipollo/release-action@v1.13.0
        with:
          # note this only creates release without binaries
          # as downloads will go via s3 bucket
          allowUpdates: true
          tag: v${{ steps.version.outputs.version }}
