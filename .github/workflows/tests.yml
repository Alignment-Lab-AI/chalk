name: tests

on:
  pull_request:
  workflow_dispatch:
    inputs:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TEST_API_SERVER_CERT: ${{ secrets.TEST_API_SERVER_CERT }}
  TEST_API_SERVER_CERT_KEY: ${{ secrets.TEST_API_SERVER_CERT_KEY }}

permissions:
  contents: read
  packages: write

jobs:
  pytest:
    runs-on: ubuntu-latest

    if: |
      github.event_name != 'pull_request' || (
        !github.event.pull_request.draft &&
        !contains(github.event.pull_request.body, format('skip:{0}', github.workflow))
      )

    concurrency:
      # only allow one job per PR running
      # older pending jobs will be cancelled not to waste CI minutes
      # cannot use github.job here https://github.com/community/community/discussions/13496
      group: ${{ github.workflow }}-pytest-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}

      - name: Compile chalk
        run: |
          docker buildx bake --file docker-compose.yml --file docker-compose-cache.json chalk-compile
          docker compose run chalk-compile

      # - name: Update hosts
      #   run: |
      #     sudo echo "127.0.0.1 chalk.crashoverride.local" | sudo tee -a /etc/hosts
      #     ping -c 1 chalk.crashoverride.local || exit 1
      #     sudo resolvectl flush-caches

      # - name: Build server
      #   run: |
      #     mkdir -p server/app/keys
      #     echo $TEST_API_SERVER_CERT > server/app/keys/self-signed.cert
      #     echo $TEST_API_SERVER_CERT_KEY > server/app/keys/self-signed.key
      #     docker buildx bake --file docker-compose.yml --file docker-compose-cache.json server

      - name: Run tests
        run: |
          docker buildx bake --file docker-compose.yml --file docker-compose-cache.json tests
          docker compose run --rm tests
